name: Build Project

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'

    - name: Cache vcpkg
      id: cache-vcpkg
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/packages
          !${{ github.workspace }}/vcpkg/downloads
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Install vcpkg
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat

    - name: Set VCPKG_ROOT
      shell: pwsh
      run: echo "VCPKG_ROOT=$((Get-Location).Path -replace '\\', '/')/vcpkg" >> $env:GITHUB_ENV

    - name: Check VCPKG_ROOT
      shell: bash
      run: echo $VCPKG_ROOT

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/vcpkg/installed
        key: ${{ runner.os }}-vcpkg-installed-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-installed-

    - name: Install dependencies
      run: .\vcpkg\vcpkg.exe install

    - name: Cache CMake
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/build
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-

    - name: Configure CMake
      run: cmake -S . -B build --preset=FLATRIM

    - name: Build with CMake
      run: cmake --build build --config Release --parallel 4

    - name: Copy DLLs
      run: |
        mkdir dist\SKSE\Plugins
        xcopy "build\release\*.dll" "dist\SKSE\Plugins\" /I /Y
        xcopy "build\release\*.pdb" "dist\SKSE\Plugins\" /I /Y

    - name: Copy package
      run: xcopy "package" "dist" /I /Y /E